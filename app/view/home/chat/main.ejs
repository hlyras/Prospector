<div id="chat-container" class="mobile-box a3-5 container"
  style="background-image: url('images/bg/chat/bg-2.png'); background-size: cover; background-position: center;">
</div>

<script>
  let currentChatContact = null;
  let currentReplyMessage = null;

  document.addEventListener("DOMContentLoaded", () => {
    const chat_container = document.getElementById("chat-container");
    const header_container = document.getElementById("header-container");

    let identity_box = identityDiv();
    chat_container.append(identity_box);

    let message_box = messageBox();
    chat_container.append(message_box);

    let message_input_box = messageInputBox();
    chat_container.append(message_input_box);

    // functions
    function resizeMessageBox() {
      const containerHeight = chat_container.clientHeight;
      const identityHeight = identity_box.offsetHeight;
      const inputHeight = message_input_box.offsetHeight;

      const availableHeight = containerHeight - identityHeight - inputHeight;
      message_box.style.height = availableHeight + "px";
    };

    // events
    window.addEventListener("resize", function () {
      resizeChatContainer();
      resizeMessageBox();
    });

    resizeChatContainer();
    resizeMessageBox();
  });

  function resizeChatContainer() {
    const chat_container = document.getElementById("chat-container");
    const header_container = document.getElementById("header-container");

    chat_container.style.height = (window.innerHeight - header_container.offsetHeight) + "px";
  };

  async function openChat(jid) {
    let contact = (await API.response(Contact.filter, { jid }))[0];
    if (!contact) { return; }

    currentChatContact = jid;

    contact.messages = await API.response(Message.filter, { jid });
    if (!contact.messages) { return; }

    let identity_box = document.getElementById("identity-box");
    let message_box = document.getElementById("message-box");
    let message_input = document.getElementById("message-input-container");

    // identity box
    identity_box.innerHTML = "";
    let identity_info_box = lib.element.create("div", {
      class: "mobile-box container margin-left-10",
      style: "align-self: center;"
    });
    identity_box.append(identity_info_box);

    let profile_picture = lib.element.create("img", {
      class: "image-prop size-35 radius-50 v-center",
      src: contact.profile_picture || "/images/icon/profile.png",
    });
    identity_info_box.append(profile_picture);

    let identity_contact_box = lib.element.create("div", {
      class: "mobile-box container v-center padding-left-10"
    });
    identity_info_box.append(identity_contact_box);

    identity_contact_box.append(lib.element.create("div", {
      class: "mobile-box lucida-grande em09 text-shadow v-center",
      style: "flex-grow: 1;"
    }, contact.business || contact.name || ""));

    lib.splitTextBy(contact.jid, "@")[1] != "g.us" && identity_contact_box.append(lib.element.create("div", {
      class: "mobile-box b1 em08 text-shadow v-center"
    }, lib.splitTextBy(contact.jid, "@")[0]));

    // Message box
    message_box.innerHTML = "";

    contact.messages = lib.sort(contact.messages, "datetime");

    contact.messages.forEach(message => {
      let message_div = messageDiv(message);
      message_div && message_box.append(message_div);
    });

    message_box.scrollTop = message_box.scrollHeight;
  };

  function identityDiv() {
    let identity_div = lib.element.create("div", {
      id: "identity-box",
      class: "box a1 container ground",
      style: `height: ${parseInt(window.innerHeight) * 0.08}px;`
    });
    return identity_div;
  };

  function messageBox() {
    let message_box = lib.element.create("div", {
      id: "message-box",
      class: "box a1 container scroll-y padding-20",
    });
    return message_box;
  }

  function messageInputBox() {
    let message_input_container = lib.element.create("div", {
      id: "message-input-container",
      class: "box a1 container h-center",
      style: `position:relative;height: ${parseInt(window.innerHeight) * 0.10}px;`
    });

    let message_reply = lib.element.create("div", {
      id: "message-reply-container",
      class: "mobile-box b11-12 container height-50 ground padding-5",
      style: "position: absolute;top:-40px;display:none;"
    });
    message_input_container.append(message_reply);

    let message_input_box = lib.element.create("div", {
      id: "message-input-box",
      class: "mobile-box b11-12 container ground noborder shadow radius-40 padding-10",
      style: "height: 75%;align-self: center;"
    });
    message_input_container.append(message_input_box);

    let input_file_icon = lib.element.icon("b9 icon", "15", "/images/icon/increase.png")
    message_input_box.append(input_file_icon);

    let message_input = lib.element.create("input", {
      class: "mobile-box b7-9 rem09 noborder v-center padding-5",
      placeholder: "Digite uma mensagem"
    });
    message_input_box.append(message_input);

    let send_message_icon = lib.element.icon("b9 icon", "25", "/images/icon/send.png")
    message_input_box.append(send_message_icon);

    send_message_icon.addEventListener("click", async () => {
      if (!currentChatContact) return;
      if (!message_input.value) return;

      let message = {
        jid: currentChatContact,
        content: message_input.value
      };

      let response = await API.response(Message.send, message);
      console.log(response);

      message_input.value = "";
    });

    return message_input_container;
  };
</script>