<script>
  function contactDiv(contact) {
    let contact_div = lib.element.create("div", {
      id: `contact-${contact.jid}`,
      class: "box a1 container box-hover opacity-out-09 ground padding-8 pointer",
      style: "position: relative;"
    });

    let notify_batch = lib.element.create("span", {
      id: `contact-${contact.jid}-notify`,
      class: "badge padding-5 radius-50",
      style: `background-color:red;top:5px;right:5px;`
    });
    contact_div.append(notify_batch);

    console.log(contact.status);

    if (contact.notify) {
      lib.display(notify_batch, "");
      if (!contact.status) { lib.display("all-users-icon-notify", ""); }
      if (contact.status == "conectado") { lib.display("conected-icon-notify", ""); }
      if (contact.status == "interessado") { lib.display("interested-icon-notify", ""); }
      if (contact.status == "demonstração") { lib.display("demo-icon-notify", ""); }
    } else {
      lib.display(notify_batch, "none");
    }

    let profile_picture_box = lib.element.create("div", {
      class: "mobile-box b6 container v-center"
    });
    contact_div.append(profile_picture_box);

    let profile_picture = lib.element.create("img", {
      id: `profile-picture-${contact.jid}`,
      class: "image-prop size-50 radius-50",
      src: contact.profile_picture || "/images/icon/profile.png",
      'data-empty': contact.profile_picture ? false : true
    });
    profile_picture_box.append(profile_picture);

    let info_box = lib.element.create("div", {
      class: "mobile-box b5-6 container v-center"
    });
    contact_div.append(info_box);

    let name_box = lib.element.create("div", {
      class: "mobile-box b1 container v-center"
    });
    info_box.append(name_box);

    let name = lib.element.create("div", {
      class: "mobile-box b1 lucida-grande em08 text-shadow"
    }, contact.business || contact.name || lib.splitTextBy(contact.jid, "@")[0]);
    name_box.append(name);

    if (contact.last_message_type == "text") { lib.string.cut(contact.last_message_content, 30); }
    if (contact.last_message_type == "conversation") { lib.string.cut(contact.last_message_content, 30); }
    if (contact.last_message_type == "image") { contact.last_message_content = "📸 Foto"; }
    if (contact.last_message_type == "video") { contact.last_message_content = "🎬 Vídeo"; }
    if (contact.last_message_type == "audio") { contact.last_message_content = "🔊 Áudio"; }

    let contact_box = lib.element.create("div", {
      class: "box b1 container"
    });
    contact_div.append(contact_box);

    let last_message_box = lib.element.create("div", {
      class: "mobile-box a1 container v-center"
    });
    info_box.append(last_message_box);

    let last_message = lib.element.create("div", {
      id: `last-message-${contact.jid}`,
      class: "mobile-box b3-4 em07 v-center margin-top-5 pre-wrap"
    }, contact.last_message_content ? lib.string.cut(contact.last_message_content, 20) : null);
    last_message_box.append(last_message);

    let datetime = lib.element.create("div", {
      id: `last-message-datetime-${contact.jid}`,
      class: "mobile-box b4 em06 text-shadow v-center right margin-top-5"
    }, contact.last_message_datetime ?
      lib.splitTextBy(lib.timestampToFulldate(contact.last_message_datetime), " ")[1]
      : null
    );
    last_message_box.append(datetime);

    // events
    contact_div.addEventListener("click", () => {
      if (contact.notify) {
        let update_contact = {
          jid: contact.jid,
          notify: 0
        }
        lib.display(`contact-${contact.jid}-notify`, "none");
        API.response(Contact.update, update_contact);
      }
      openChat(contact.jid);
    });

    profile_picture.addEventListener("click", async () => {
      lib.image.zoom(profile_picture.src);
    });

    return contact_div;
  };
</script>