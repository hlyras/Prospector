<script>
  function messageReaction(message) {
    let last_message_datetime = document.getElementById(`last-message-datetime-${message.jid}`);
    last_message_datetime.innerHTML = "";
    last_message_datetime.innerHTML = lib.splitTextBy(lib.timestampToFulldate(message.datetime), " ")[1];

    let last_message = document.getElementById(`last-message-${message.jid}`);
    last_message.innerHTML = "";

    last_message.innerHTML = message.content;

    let message_reaction_box = document.getElementById(`message-${message.target_id}-reaction-box`);
    if (!message_reaction_box) { return; }

    if (message.content) {
      let message_reaction_div = reactionDiv(message);
      message_reaction_box.append(message_reaction_div);

      if (message.origin_id) {
        document.getElementById(`message-${message.origin_id}-reaction`).remove();
      }
    } else {
      document.getElementById(`message-${message.origin_id}-reaction`).remove();
    }
  };

  function reactionDiv(message) {
    let message_reaction_div = lib.element.create("div", {
      id: `message-${message.wa_id}-reaction`,
      class: "ground em08 padding-3 margin-1 radius-50 shadow-lg-st pointer noselect",
      style: "position: relative;"
    }, message.content);

    message_reaction_div.addEventListener("click", event => {
      event.stopPropagation();

      let reaction_box = reactionBox(event);

      let reaction_div = lib.element.create("div", {
        class: "mobile-box b1 radius-50 box-hover padding-5 center pointer noselect"
      }, `${message.jid.split("@")[0]} - Remover`);
      reaction_box.append(reaction_div);

      reaction_div.addEventListener("click", async () => {
        let response = await API.response(Message.react, {
          jid: message.jid,
          key: {
            remoteJid: message.jid,
            id: message.target_id,
            fromMe: message.from_me,
            participant: message.participant ?
              message.participant : null
          },
          content: ""
        }, "none");

        reaction_box.remove();
      });

      document.body.appendChild(reaction_box);
    });

    return message_reaction_div;
  };

  function reactionBox(e) {
    document.querySelectorAll('.react-popup')
      .forEach(el => el.remove());

    const rect = e.target.getBoundingClientRect();
    const screenHalfY = window.innerHeight / 2;
    const screenHalfX = window.innerWidth / 2;
    const opensUp = rect.top > screenHalfY;
    const isRight = rect.left > screenHalfX;

    const reaction_box = lib.element.create("div", {
      class: "react-popup container ground border radius-50 shadow scroll-x-hide scroll-y-hide",
    });
    reaction_box.style.position = 'absolute';
    reaction_box.style.width = '200px';
    reaction_box.style.height = '35px';

    reaction_box.style.left = isRight ?
      (e.pageX - 160) + 'px' : (e.pageX - 100) + 'px'

    reaction_box.style.top = opensUp ?
      rect.top - 35 + 'px' : rect.top + 10 + 'px';

    function handleOutsideClick(event) {
      console.log(event.target);
      console.log(reaction_box.contains(event.target));
      if (!reaction_box.contains(event.target)) {
        reaction_box.remove();
        document.removeEventListener('click', handleOutsideClick);
      }
    };

    document.addEventListener('click', handleOutsideClick);

    return reaction_box;
  }
</script>